<?xml version="1.0" encoding="UTF-8"?><testrun name="OmdbRunnerTest" project="PostmanOmdb" tests="27" started="27" failures="0" errors="7" ignored="24">
  <testsuite name="com.qa.PostmanOmdb.OmdbRunnerTest" time="0.173">
    <testsuite name="Feature: Testing OMDB API" time="0.173">
      <testsuite name="Scenario: Testing a status code" time="0.047" incomplete="true">
        <error>java.lang.NullPointerException&#13;
	at com.qa.PostmanOmdb.OmdbTestSteps.teardown(OmdbTestSteps.java:48)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at cucumber.runtime.Utils$1.call(Utils.java:37)&#13;
	at cucumber.runtime.Timeout.timeout(Timeout.java:13)&#13;
	at cucumber.runtime.Utils.invoke(Utils.java:31)&#13;
	at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)&#13;
	at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:223)&#13;
	at cucumber.runtime.Runtime.runHooks(Runtime.java:211)&#13;
	at cucumber.runtime.Runtime.runAfterHooks(Runtime.java:205)&#13;
	at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)&#13;
	at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91)&#13;
	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)&#13;
	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)&#13;
	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:93)&#13;
	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at cucumber.api.junit.Cucumber.run(Cucumber.java:98)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
        <testcase name="Given a film exists with the Title Guardians of the Galaxy Two" classname="Scenario: Testing a status code" time="0.032"/>
        <testcase name="When a user retrieves the film by the title Guardians of the Galaxy Two" classname="Scenario: Testing a status code" time="0.0"/>
        <testcase name="Then the status code reads 200" classname="Scenario: Testing a status code" time="0.015"/>
      </testsuite>
      <testsuite name="Scenario: Testing both a status code and a field" time="0.0" incomplete="true">
        <skipped/>
        <testcase name="Given a film exists with the Title IT" classname="Scenario: Testing both a status code and a field" time="0.0" ignored="true"/>
        <testcase name="When a user retrieves the film by the title IT" classname="Scenario: Testing both a status code and a field" time="0.0" ignored="true"/>
        <testcase name="Then the status code reads 200" classname="Scenario: Testing both a status code and a field" time="0.0" ignored="true"/>
        <testcase name="And the Rated Field is equal to R" classname="Scenario: Testing both a status code and a field" time="0.0" ignored="true"/>
      </testsuite>
      <testsuite name="Scenario: Testing the API using parameters" time="0.0" incomplete="true">
        <skipped/>
        <testcase name="Given a film exists with the Title &quot;Hop&quot;" classname="Scenario: Testing the API using parameters" time="0.0" ignored="true"/>
        <testcase name="When a user retrieves the film by the title &quot;Hop&quot;" classname="Scenario: Testing the API using parameters" time="0.0" ignored="true"/>
        <testcase name="Then the status code reads 200" classname="Scenario: Testing the API using parameters" time="0.0" ignored="true"/>
        <testcase name="And the Rated Field is equal to &quot;PG&quot;" classname="Scenario: Testing the API using parameters" time="0.0" ignored="true"/>
      </testsuite>
      <testsuite name="Scenario Outline: Testing the API using a table" time="0.031">
        <testsuite name="Examples:" time="0.031">
          <testsuite name="| Hop | PG |" time="0.0" incomplete="true">
            <skipped/>
            <testcase name="Given a film exists with the Title &quot;Hop&quot;" classname="| Hop | PG |" time="0.0" ignored="true"/>
            <testcase name="When a user retrieves the film by the title &quot;Hop&quot;" classname="| Hop | PG |" time="0.0" ignored="true"/>
            <testcase name="Then the status code reads 200" classname="| Hop | PG |" time="0.0" ignored="true"/>
            <testcase name="And the Rated Field is equal to &quot;PG&quot;" classname="| Hop | PG |" time="0.0" ignored="true"/>
          </testsuite>
          <testsuite name="| It | R |" time="0.0" incomplete="true">
            <skipped/>
            <testcase name="Given a film exists with the Title &quot;It&quot;" classname="| It | R |" time="0.0" ignored="true"/>
            <testcase name="When a user retrieves the film by the title &quot;It&quot;" classname="| It | R |" time="0.0" ignored="true"/>
            <testcase name="Then the status code reads 200" classname="| It | R |" time="0.0" ignored="true"/>
            <testcase name="And the Rated Field is equal to &quot;R&quot;" classname="| It | R |" time="0.0" ignored="true"/>
          </testsuite>
          <testsuite name="| Up | PG |" time="0.0" incomplete="true">
            <skipped/>
            <testcase name="Given a film exists with the Title &quot;Up&quot;" classname="| Up | PG |" time="0.0" ignored="true"/>
            <testcase name="When a user retrieves the film by the title &quot;Up&quot;" classname="| Up | PG |" time="0.0" ignored="true"/>
            <testcase name="Then the status code reads 200" classname="| Up | PG |" time="0.0" ignored="true"/>
            <testcase name="And the Rated Field is equal to &quot;PG&quot;" classname="| Up | PG |" time="0.0" ignored="true"/>
          </testsuite>
          <testsuite name="| Saw | R |" time="0.0" incomplete="true">
            <skipped/>
            <testcase name="Given a film exists with the Title &quot;Saw&quot;" classname="| Saw | R |" time="0.0" ignored="true"/>
            <testcase name="When a user retrieves the film by the title &quot;Saw&quot;" classname="| Saw | R |" time="0.0" ignored="true"/>
            <testcase name="Then the status code reads 200" classname="| Saw | R |" time="0.0" ignored="true"/>
            <testcase name="And the Rated Field is equal to &quot;R&quot;" classname="| Saw | R |" time="0.0" ignored="true"/>
          </testsuite>
        </testsuite>
      </testsuite>
    </testsuite>
  </testsuite>
</testrun>
